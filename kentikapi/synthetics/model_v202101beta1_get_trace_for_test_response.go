/*
 * Synthetics Monitoring API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 202101beta1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synthetics

import (
	"encoding/json"
)

// V202101beta1GetTraceForTestResponse struct for V202101beta1GetTraceForTestResponse
type V202101beta1GetTraceForTestResponse struct {
	Lookups         *V202101beta1TracerouteLookup   `json:"lookups,omitempty"`
	TraceRoutes     *[]V202101beta1TracerouteResult `json:"traceRoutes,omitempty"`
	TraceRoutesInfo *V202101beta1TracerouteInfo     `json:"traceRoutesInfo,omitempty"`
}

// NewV202101beta1GetTraceForTestResponse instantiates a new V202101beta1GetTraceForTestResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV202101beta1GetTraceForTestResponse() *V202101beta1GetTraceForTestResponse {
	this := V202101beta1GetTraceForTestResponse{}
	return &this
}

// NewV202101beta1GetTraceForTestResponseWithDefaults instantiates a new V202101beta1GetTraceForTestResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV202101beta1GetTraceForTestResponseWithDefaults() *V202101beta1GetTraceForTestResponse {
	this := V202101beta1GetTraceForTestResponse{}
	return &this
}

// GetLookups returns the Lookups field value if set, zero value otherwise.
func (o *V202101beta1GetTraceForTestResponse) GetLookups() V202101beta1TracerouteLookup {
	if o == nil || o.Lookups == nil {
		var ret V202101beta1TracerouteLookup
		return ret
	}
	return *o.Lookups
}

// GetLookupsOk returns a tuple with the Lookups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1GetTraceForTestResponse) GetLookupsOk() (*V202101beta1TracerouteLookup, bool) {
	if o == nil || o.Lookups == nil {
		return nil, false
	}
	return o.Lookups, true
}

// HasLookups returns a boolean if a field has been set.
func (o *V202101beta1GetTraceForTestResponse) HasLookups() bool {
	if o != nil && o.Lookups != nil {
		return true
	}

	return false
}

// SetLookups gets a reference to the given V202101beta1TracerouteLookup and assigns it to the Lookups field.
func (o *V202101beta1GetTraceForTestResponse) SetLookups(v V202101beta1TracerouteLookup) {
	o.Lookups = &v
}

// GetTraceRoutes returns the TraceRoutes field value if set, zero value otherwise.
func (o *V202101beta1GetTraceForTestResponse) GetTraceRoutes() []V202101beta1TracerouteResult {
	if o == nil || o.TraceRoutes == nil {
		var ret []V202101beta1TracerouteResult
		return ret
	}
	return *o.TraceRoutes
}

// GetTraceRoutesOk returns a tuple with the TraceRoutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1GetTraceForTestResponse) GetTraceRoutesOk() (*[]V202101beta1TracerouteResult, bool) {
	if o == nil || o.TraceRoutes == nil {
		return nil, false
	}
	return o.TraceRoutes, true
}

// HasTraceRoutes returns a boolean if a field has been set.
func (o *V202101beta1GetTraceForTestResponse) HasTraceRoutes() bool {
	if o != nil && o.TraceRoutes != nil {
		return true
	}

	return false
}

// SetTraceRoutes gets a reference to the given []V202101beta1TracerouteResult and assigns it to the TraceRoutes field.
func (o *V202101beta1GetTraceForTestResponse) SetTraceRoutes(v []V202101beta1TracerouteResult) {
	o.TraceRoutes = &v
}

// GetTraceRoutesInfo returns the TraceRoutesInfo field value if set, zero value otherwise.
func (o *V202101beta1GetTraceForTestResponse) GetTraceRoutesInfo() V202101beta1TracerouteInfo {
	if o == nil || o.TraceRoutesInfo == nil {
		var ret V202101beta1TracerouteInfo
		return ret
	}
	return *o.TraceRoutesInfo
}

// GetTraceRoutesInfoOk returns a tuple with the TraceRoutesInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1GetTraceForTestResponse) GetTraceRoutesInfoOk() (*V202101beta1TracerouteInfo, bool) {
	if o == nil || o.TraceRoutesInfo == nil {
		return nil, false
	}
	return o.TraceRoutesInfo, true
}

// HasTraceRoutesInfo returns a boolean if a field has been set.
func (o *V202101beta1GetTraceForTestResponse) HasTraceRoutesInfo() bool {
	if o != nil && o.TraceRoutesInfo != nil {
		return true
	}

	return false
}

// SetTraceRoutesInfo gets a reference to the given V202101beta1TracerouteInfo and assigns it to the TraceRoutesInfo field.
func (o *V202101beta1GetTraceForTestResponse) SetTraceRoutesInfo(v V202101beta1TracerouteInfo) {
	o.TraceRoutesInfo = &v
}

func (o V202101beta1GetTraceForTestResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Lookups != nil {
		toSerialize["lookups"] = o.Lookups
	}
	if o.TraceRoutes != nil {
		toSerialize["traceRoutes"] = o.TraceRoutes
	}
	if o.TraceRoutesInfo != nil {
		toSerialize["traceRoutesInfo"] = o.TraceRoutesInfo
	}
	return json.Marshal(toSerialize)
}

type NullableV202101beta1GetTraceForTestResponse struct {
	value *V202101beta1GetTraceForTestResponse
	isSet bool
}

func (v NullableV202101beta1GetTraceForTestResponse) Get() *V202101beta1GetTraceForTestResponse {
	return v.value
}

func (v *NullableV202101beta1GetTraceForTestResponse) Set(val *V202101beta1GetTraceForTestResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV202101beta1GetTraceForTestResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV202101beta1GetTraceForTestResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV202101beta1GetTraceForTestResponse(val *V202101beta1GetTraceForTestResponse) *NullableV202101beta1GetTraceForTestResponse {
	return &NullableV202101beta1GetTraceForTestResponse{value: val, isSet: true}
}

func (v NullableV202101beta1GetTraceForTestResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV202101beta1GetTraceForTestResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
