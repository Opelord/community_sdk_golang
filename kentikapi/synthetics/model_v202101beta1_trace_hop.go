/*
 * Synthetics Monitoring API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 202101beta1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synthetics

import (
	"encoding/json"
)

// V202101beta1TraceHop struct for V202101beta1TraceHop
type V202101beta1TraceHop struct {
	Ttl                *int32  `json:"ttl,omitempty"`
	Ip                 *string `json:"ip,omitempty"`
	Timeout            *bool   `json:"timeout,omitempty"`
	Latency            *int32  `json:"latency,omitempty"`
	MinExpectedLatency *int32  `json:"minExpectedLatency,omitempty"`
	Asn                *int32  `json:"asn,omitempty"`
	Site               *int32  `json:"site,omitempty"`
	Region             *int32  `json:"region,omitempty"`
	Target             *bool   `json:"target,omitempty"`
	TraceEnd           *bool   `json:"traceEnd,omitempty"`
}

// NewV202101beta1TraceHop instantiates a new V202101beta1TraceHop object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV202101beta1TraceHop() *V202101beta1TraceHop {
	this := V202101beta1TraceHop{}
	return &this
}

// NewV202101beta1TraceHopWithDefaults instantiates a new V202101beta1TraceHop object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV202101beta1TraceHopWithDefaults() *V202101beta1TraceHop {
	this := V202101beta1TraceHop{}
	return &this
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *V202101beta1TraceHop) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1TraceHop) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *V202101beta1TraceHop) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *V202101beta1TraceHop) SetTtl(v int32) {
	o.Ttl = &v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *V202101beta1TraceHop) GetIp() string {
	if o == nil || o.Ip == nil {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1TraceHop) GetIpOk() (*string, bool) {
	if o == nil || o.Ip == nil {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *V202101beta1TraceHop) HasIp() bool {
	if o != nil && o.Ip != nil {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *V202101beta1TraceHop) SetIp(v string) {
	o.Ip = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *V202101beta1TraceHop) GetTimeout() bool {
	if o == nil || o.Timeout == nil {
		var ret bool
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1TraceHop) GetTimeoutOk() (*bool, bool) {
	if o == nil || o.Timeout == nil {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *V202101beta1TraceHop) HasTimeout() bool {
	if o != nil && o.Timeout != nil {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given bool and assigns it to the Timeout field.
func (o *V202101beta1TraceHop) SetTimeout(v bool) {
	o.Timeout = &v
}

// GetLatency returns the Latency field value if set, zero value otherwise.
func (o *V202101beta1TraceHop) GetLatency() int32 {
	if o == nil || o.Latency == nil {
		var ret int32
		return ret
	}
	return *o.Latency
}

// GetLatencyOk returns a tuple with the Latency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1TraceHop) GetLatencyOk() (*int32, bool) {
	if o == nil || o.Latency == nil {
		return nil, false
	}
	return o.Latency, true
}

// HasLatency returns a boolean if a field has been set.
func (o *V202101beta1TraceHop) HasLatency() bool {
	if o != nil && o.Latency != nil {
		return true
	}

	return false
}

// SetLatency gets a reference to the given int32 and assigns it to the Latency field.
func (o *V202101beta1TraceHop) SetLatency(v int32) {
	o.Latency = &v
}

// GetMinExpectedLatency returns the MinExpectedLatency field value if set, zero value otherwise.
func (o *V202101beta1TraceHop) GetMinExpectedLatency() int32 {
	if o == nil || o.MinExpectedLatency == nil {
		var ret int32
		return ret
	}
	return *o.MinExpectedLatency
}

// GetMinExpectedLatencyOk returns a tuple with the MinExpectedLatency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1TraceHop) GetMinExpectedLatencyOk() (*int32, bool) {
	if o == nil || o.MinExpectedLatency == nil {
		return nil, false
	}
	return o.MinExpectedLatency, true
}

// HasMinExpectedLatency returns a boolean if a field has been set.
func (o *V202101beta1TraceHop) HasMinExpectedLatency() bool {
	if o != nil && o.MinExpectedLatency != nil {
		return true
	}

	return false
}

// SetMinExpectedLatency gets a reference to the given int32 and assigns it to the MinExpectedLatency field.
func (o *V202101beta1TraceHop) SetMinExpectedLatency(v int32) {
	o.MinExpectedLatency = &v
}

// GetAsn returns the Asn field value if set, zero value otherwise.
func (o *V202101beta1TraceHop) GetAsn() int32 {
	if o == nil || o.Asn == nil {
		var ret int32
		return ret
	}
	return *o.Asn
}

// GetAsnOk returns a tuple with the Asn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1TraceHop) GetAsnOk() (*int32, bool) {
	if o == nil || o.Asn == nil {
		return nil, false
	}
	return o.Asn, true
}

// HasAsn returns a boolean if a field has been set.
func (o *V202101beta1TraceHop) HasAsn() bool {
	if o != nil && o.Asn != nil {
		return true
	}

	return false
}

// SetAsn gets a reference to the given int32 and assigns it to the Asn field.
func (o *V202101beta1TraceHop) SetAsn(v int32) {
	o.Asn = &v
}

// GetSite returns the Site field value if set, zero value otherwise.
func (o *V202101beta1TraceHop) GetSite() int32 {
	if o == nil || o.Site == nil {
		var ret int32
		return ret
	}
	return *o.Site
}

// GetSiteOk returns a tuple with the Site field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1TraceHop) GetSiteOk() (*int32, bool) {
	if o == nil || o.Site == nil {
		return nil, false
	}
	return o.Site, true
}

// HasSite returns a boolean if a field has been set.
func (o *V202101beta1TraceHop) HasSite() bool {
	if o != nil && o.Site != nil {
		return true
	}

	return false
}

// SetSite gets a reference to the given int32 and assigns it to the Site field.
func (o *V202101beta1TraceHop) SetSite(v int32) {
	o.Site = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *V202101beta1TraceHop) GetRegion() int32 {
	if o == nil || o.Region == nil {
		var ret int32
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1TraceHop) GetRegionOk() (*int32, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *V202101beta1TraceHop) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given int32 and assigns it to the Region field.
func (o *V202101beta1TraceHop) SetRegion(v int32) {
	o.Region = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *V202101beta1TraceHop) GetTarget() bool {
	if o == nil || o.Target == nil {
		var ret bool
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1TraceHop) GetTargetOk() (*bool, bool) {
	if o == nil || o.Target == nil {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *V202101beta1TraceHop) HasTarget() bool {
	if o != nil && o.Target != nil {
		return true
	}

	return false
}

// SetTarget gets a reference to the given bool and assigns it to the Target field.
func (o *V202101beta1TraceHop) SetTarget(v bool) {
	o.Target = &v
}

// GetTraceEnd returns the TraceEnd field value if set, zero value otherwise.
func (o *V202101beta1TraceHop) GetTraceEnd() bool {
	if o == nil || o.TraceEnd == nil {
		var ret bool
		return ret
	}
	return *o.TraceEnd
}

// GetTraceEndOk returns a tuple with the TraceEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1TraceHop) GetTraceEndOk() (*bool, bool) {
	if o == nil || o.TraceEnd == nil {
		return nil, false
	}
	return o.TraceEnd, true
}

// HasTraceEnd returns a boolean if a field has been set.
func (o *V202101beta1TraceHop) HasTraceEnd() bool {
	if o != nil && o.TraceEnd != nil {
		return true
	}

	return false
}

// SetTraceEnd gets a reference to the given bool and assigns it to the TraceEnd field.
func (o *V202101beta1TraceHop) SetTraceEnd(v bool) {
	o.TraceEnd = &v
}

func (o V202101beta1TraceHop) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.Ip != nil {
		toSerialize["ip"] = o.Ip
	}
	if o.Timeout != nil {
		toSerialize["timeout"] = o.Timeout
	}
	if o.Latency != nil {
		toSerialize["latency"] = o.Latency
	}
	if o.MinExpectedLatency != nil {
		toSerialize["minExpectedLatency"] = o.MinExpectedLatency
	}
	if o.Asn != nil {
		toSerialize["asn"] = o.Asn
	}
	if o.Site != nil {
		toSerialize["site"] = o.Site
	}
	if o.Region != nil {
		toSerialize["region"] = o.Region
	}
	if o.Target != nil {
		toSerialize["target"] = o.Target
	}
	if o.TraceEnd != nil {
		toSerialize["traceEnd"] = o.TraceEnd
	}
	return json.Marshal(toSerialize)
}

type NullableV202101beta1TraceHop struct {
	value *V202101beta1TraceHop
	isSet bool
}

func (v NullableV202101beta1TraceHop) Get() *V202101beta1TraceHop {
	return v.value
}

func (v *NullableV202101beta1TraceHop) Set(val *V202101beta1TraceHop) {
	v.value = val
	v.isSet = true
}

func (v NullableV202101beta1TraceHop) IsSet() bool {
	return v.isSet
}

func (v *NullableV202101beta1TraceHop) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV202101beta1TraceHop(val *V202101beta1TraceHop) *NullableV202101beta1TraceHop {
	return &NullableV202101beta1TraceHop{value: val, isSet: true}
}

func (v NullableV202101beta1TraceHop) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV202101beta1TraceHop) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
