/*
 * Cloud Export Admin API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 202101
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cloudexport

import (
	"encoding/json"
)

// V202101beta1GceProperties struct for V202101beta1GceProperties
type V202101beta1GceProperties struct {
	Project      *string `json:"project,omitempty"`
	Subscription *string `json:"subscription,omitempty"`
}

// NewV202101beta1GceProperties instantiates a new V202101beta1GceProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV202101beta1GceProperties() *V202101beta1GceProperties {
	this := V202101beta1GceProperties{}
	return &this
}

// NewV202101beta1GcePropertiesWithDefaults instantiates a new V202101beta1GceProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV202101beta1GcePropertiesWithDefaults() *V202101beta1GceProperties {
	this := V202101beta1GceProperties{}
	return &this
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *V202101beta1GceProperties) GetProject() string {
	if o == nil || o.Project == nil {
		var ret string
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1GceProperties) GetProjectOk() (*string, bool) {
	if o == nil || o.Project == nil {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *V202101beta1GceProperties) HasProject() bool {
	if o != nil && o.Project != nil {
		return true
	}

	return false
}

// SetProject gets a reference to the given string and assigns it to the Project field.
func (o *V202101beta1GceProperties) SetProject(v string) {
	o.Project = &v
}

// GetSubscription returns the Subscription field value if set, zero value otherwise.
func (o *V202101beta1GceProperties) GetSubscription() string {
	if o == nil || o.Subscription == nil {
		var ret string
		return ret
	}
	return *o.Subscription
}

// GetSubscriptionOk returns a tuple with the Subscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1GceProperties) GetSubscriptionOk() (*string, bool) {
	if o == nil || o.Subscription == nil {
		return nil, false
	}
	return o.Subscription, true
}

// HasSubscription returns a boolean if a field has been set.
func (o *V202101beta1GceProperties) HasSubscription() bool {
	if o != nil && o.Subscription != nil {
		return true
	}

	return false
}

// SetSubscription gets a reference to the given string and assigns it to the Subscription field.
func (o *V202101beta1GceProperties) SetSubscription(v string) {
	o.Subscription = &v
}

func (o V202101beta1GceProperties) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Project != nil {
		toSerialize["project"] = o.Project
	}
	if o.Subscription != nil {
		toSerialize["subscription"] = o.Subscription
	}
	return json.Marshal(toSerialize)
}

type NullableV202101beta1GceProperties struct {
	value *V202101beta1GceProperties
	isSet bool
}

func (v NullableV202101beta1GceProperties) Get() *V202101beta1GceProperties {
	return v.value
}

func (v *NullableV202101beta1GceProperties) Set(val *V202101beta1GceProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableV202101beta1GceProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableV202101beta1GceProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV202101beta1GceProperties(val *V202101beta1GceProperties) *NullableV202101beta1GceProperties {
	return &NullableV202101beta1GceProperties{value: val, isSet: true}
}

func (v NullableV202101beta1GceProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV202101beta1GceProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
