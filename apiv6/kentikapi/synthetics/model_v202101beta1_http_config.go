/*
 * Synthetics Monitoring API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 202101beta1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synthetics

import (
	"encoding/json"
)

// V202101beta1HTTPConfig struct for V202101beta1HTTPConfig
type V202101beta1HTTPConfig struct {
	Period          *int64             `json:"period,omitempty"`
	Expiry          *int64             `json:"expiry,omitempty"`
	Method          *string            `json:"method,omitempty"`
	Headers         *map[string]string `json:"headers,omitempty"`
	Body            *string            `json:"body,omitempty"`
	IgnoreTlsErrors *bool              `json:"ignoreTlsErrors,omitempty"`
}

// NewV202101beta1HTTPConfig instantiates a new V202101beta1HTTPConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV202101beta1HTTPConfig() *V202101beta1HTTPConfig {
	this := V202101beta1HTTPConfig{}
	return &this
}

// NewV202101beta1HTTPConfigWithDefaults instantiates a new V202101beta1HTTPConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV202101beta1HTTPConfigWithDefaults() *V202101beta1HTTPConfig {
	this := V202101beta1HTTPConfig{}
	return &this
}

// GetPeriod returns the Period field value if set, zero value otherwise.
func (o *V202101beta1HTTPConfig) GetPeriod() int64 {
	if o == nil || o.Period == nil {
		var ret int64
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1HTTPConfig) GetPeriodOk() (*int64, bool) {
	if o == nil || o.Period == nil {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *V202101beta1HTTPConfig) HasPeriod() bool {
	if o != nil && o.Period != nil {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given int64 and assigns it to the Period field.
func (o *V202101beta1HTTPConfig) SetPeriod(v int64) {
	o.Period = &v
}

// GetExpiry returns the Expiry field value if set, zero value otherwise.
func (o *V202101beta1HTTPConfig) GetExpiry() int64 {
	if o == nil || o.Expiry == nil {
		var ret int64
		return ret
	}
	return *o.Expiry
}

// GetExpiryOk returns a tuple with the Expiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1HTTPConfig) GetExpiryOk() (*int64, bool) {
	if o == nil || o.Expiry == nil {
		return nil, false
	}
	return o.Expiry, true
}

// HasExpiry returns a boolean if a field has been set.
func (o *V202101beta1HTTPConfig) HasExpiry() bool {
	if o != nil && o.Expiry != nil {
		return true
	}

	return false
}

// SetExpiry gets a reference to the given int64 and assigns it to the Expiry field.
func (o *V202101beta1HTTPConfig) SetExpiry(v int64) {
	o.Expiry = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *V202101beta1HTTPConfig) GetMethod() string {
	if o == nil || o.Method == nil {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1HTTPConfig) GetMethodOk() (*string, bool) {
	if o == nil || o.Method == nil {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *V202101beta1HTTPConfig) HasMethod() bool {
	if o != nil && o.Method != nil {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *V202101beta1HTTPConfig) SetMethod(v string) {
	o.Method = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *V202101beta1HTTPConfig) GetHeaders() map[string]string {
	if o == nil || o.Headers == nil {
		var ret map[string]string
		return ret
	}
	return *o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1HTTPConfig) GetHeadersOk() (*map[string]string, bool) {
	if o == nil || o.Headers == nil {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *V202101beta1HTTPConfig) HasHeaders() bool {
	if o != nil && o.Headers != nil {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given map[string]string and assigns it to the Headers field.
func (o *V202101beta1HTTPConfig) SetHeaders(v map[string]string) {
	o.Headers = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *V202101beta1HTTPConfig) GetBody() string {
	if o == nil || o.Body == nil {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1HTTPConfig) GetBodyOk() (*string, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *V202101beta1HTTPConfig) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *V202101beta1HTTPConfig) SetBody(v string) {
	o.Body = &v
}

// GetIgnoreTlsErrors returns the IgnoreTlsErrors field value if set, zero value otherwise.
func (o *V202101beta1HTTPConfig) GetIgnoreTlsErrors() bool {
	if o == nil || o.IgnoreTlsErrors == nil {
		var ret bool
		return ret
	}
	return *o.IgnoreTlsErrors
}

// GetIgnoreTlsErrorsOk returns a tuple with the IgnoreTlsErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V202101beta1HTTPConfig) GetIgnoreTlsErrorsOk() (*bool, bool) {
	if o == nil || o.IgnoreTlsErrors == nil {
		return nil, false
	}
	return o.IgnoreTlsErrors, true
}

// HasIgnoreTlsErrors returns a boolean if a field has been set.
func (o *V202101beta1HTTPConfig) HasIgnoreTlsErrors() bool {
	if o != nil && o.IgnoreTlsErrors != nil {
		return true
	}

	return false
}

// SetIgnoreTlsErrors gets a reference to the given bool and assigns it to the IgnoreTlsErrors field.
func (o *V202101beta1HTTPConfig) SetIgnoreTlsErrors(v bool) {
	o.IgnoreTlsErrors = &v
}

func (o V202101beta1HTTPConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Period != nil {
		toSerialize["period"] = o.Period
	}
	if o.Expiry != nil {
		toSerialize["expiry"] = o.Expiry
	}
	if o.Method != nil {
		toSerialize["method"] = o.Method
	}
	if o.Headers != nil {
		toSerialize["headers"] = o.Headers
	}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	if o.IgnoreTlsErrors != nil {
		toSerialize["ignoreTlsErrors"] = o.IgnoreTlsErrors
	}
	return json.Marshal(toSerialize)
}

type NullableV202101beta1HTTPConfig struct {
	value *V202101beta1HTTPConfig
	isSet bool
}

func (v NullableV202101beta1HTTPConfig) Get() *V202101beta1HTTPConfig {
	return v.value
}

func (v *NullableV202101beta1HTTPConfig) Set(val *V202101beta1HTTPConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableV202101beta1HTTPConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableV202101beta1HTTPConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV202101beta1HTTPConfig(val *V202101beta1HTTPConfig) *NullableV202101beta1HTTPConfig {
	return &NullableV202101beta1HTTPConfig{value: val, isSet: true}
}

func (v NullableV202101beta1HTTPConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV202101beta1HTTPConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
